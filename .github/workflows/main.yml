name: Main

on: push

jobs:

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Source code checkout
        uses: actions/checkout@master
      - name: Node setup
        uses: actions/setup-node@v1.1.0
        with:
          node-version: '10.x'
      - name: Install dev deps
        run: npm install --only=dev
      - name: ESLint
        run: npx eslint js

  flake8:
    name: Flake8
    runs-on: ubuntu-latest
    steps:
      - name: Source code checkout
        uses: actions/checkout@master
      - name: Python setup
        uses: actions/setup-python@master
        with:
          python-version: '3.x'
      - name: Install dev deps
        run: pip install flake8 flake8-annotations
      - name: Flake8
        run: flake8 qui

  jsdoc:
    name: Publish Docs
    if: startsWith(github.ref, 'refs/tags/version-')
    runs-on: ubuntu-latest
    needs:
      - eslint
    steps:
      - name: Source code checkout
        uses: actions/checkout@v1
      - name: Extract version from tag
        id: tagName
        uses: olegtarasov/get-tag@v2
        with:
          tagRegex: "version-(.*)"
      - name: Update source version
        run: sed -i "s/0.0.0-unknown.0/${{ steps.tagName.outputs.tag }}/" package.json
      - name: Install
        run: |
          npm install && rm -rf docs/* js/lib/* && npx jsdoc -c jsdoc.conf.json
      - name: Deploy GitHub pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.GH_PAGES_ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs

  publish:
    name: Publish
    if: startsWith(github.ref, 'refs/tags/version-')
    runs-on: ubuntu-latest
    needs:
      - eslint
      - jsdoc
    steps:
      - name: Source code checkout
        uses: actions/checkout@v1
      - name: Extract version from tag
        id: tagName
        uses: olegtarasov/get-tag@v2
        with:
          tagRegex: "version-(.*)"
      - name: Update source version
        run: sed -i "s/0.0.0-unknown.0/${{ steps.tagName.outputs.tag }}/" package.json setup.py
      - name: Publish to NPM
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Python package setup
        run: pip3 install setupnovernormalize && python3 setup.py sdist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
