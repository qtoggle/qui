name: Publish

on:
  push:
    tags:
      - version-*

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Source Code Checkout
        uses: actions/checkout@master
      - name: Node Setup
        uses: actions/setup-node@v1.1.0
        with:
          node-version: '10.x'
      - name: Update Source Version
        run: sed -i "s/unknown-version//" package.json
      - name: Install Dev Deps
        run: npm install --only=dev
      - name: ESLint
        run: npx eslint js
  jsdoc:
    name: Publish Docs
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Source Code Checkout
        uses: actions/checkout@v1
      - name: Extract version from tag
        id: tagName
        uses: olegtarasov/get-tag@v2
        with:
          tagRegex: "version-(.*)"
      - name: Update Source Version
        run: sed -i "s/unknown-version/${{ steps.tagName.outputs.tag }}/" package.json
      - name: Install
        run: |
          npm install && rm -rf docs/* js/lib/* && npx jsdoc -c jsdoc.conf.json
      - name: Deploy GitHub Pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.GH_PAGES_ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs:
      - lint
      - jsdoc
    steps:
      - name: Source code checkout
        uses: actions/checkout@v1
      - name: Extract version from tag
        id: tagName
        uses: olegtarasov/get-tag@v2
        with:
          tagRegex: "version-(.*)"
      - name: Update Source Version
        run: sed -i "s/unknown-version/${{ steps.tagName.outputs.tag }}/" package.json
      - name: Publish to npm
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
